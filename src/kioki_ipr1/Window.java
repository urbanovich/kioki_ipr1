/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kioki_ipr1;

import java.math.BigInteger;

/**
 *
 * @author dzmitry
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        publickKey = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        privateKey = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        signature = new javax.swing.JTextField();
        generateKey = new javax.swing.JButton();
        subscribe = new javax.swing.JButton();
        check = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        r = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Koki IPR 1");

        jLabel1.setText("Message");

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        jLabel2.setText("Public Key");

        publickKey.setColumns(20);
        publickKey.setRows(5);
        jScrollPane2.setViewportView(publickKey);

        jLabel3.setText("Private Key");

        privateKey.setColumns(20);
        privateKey.setRows(5);
        jScrollPane3.setViewportView(privateKey);

        jLabel4.setText("Signature");

        signature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signatureActionPerformed(evt);
            }
        });

        generateKey.setText("Generate Key");
        generateKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateKeyMouseClicked(evt);
            }
        });
        generateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKeyActionPerformed(evt);
            }
        });

        subscribe.setText("Subscribe");
        subscribe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subscribeMouseClicked(evt);
            }
        });
        subscribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subscribeActionPerformed(evt);
            }
        });

        check.setText("Check");
        check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkMouseClicked(evt);
            }
        });
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        jLabel5.setText("r");

        r.setColumns(20);
        r.setRows(5);
        jScrollPane4.setViewportView(r);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generateKey)
                        .addGap(18, 18, 18)
                        .addComponent(subscribe)
                        .addGap(18, 18, 18)
                        .addComponent(check)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27)
                                .addComponent(signature)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(signature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generateKey)
                            .addComponent(subscribe)
                            .addComponent(check)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signatureActionPerformed

    private void generateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generateKeyActionPerformed

    private void subscribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subscribeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subscribeActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkActionPerformed

    private void generateKeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateKeyMouseClicked
        
        RSACustom rsa = new RSACustom();
        
        this.publickKey.setText(rsa.e.toString(this.radix));
        this.privateKey.setText(rsa.d.toString(this.radix));
        this.r.setText(rsa.r.toString(this.radix));
    }//GEN-LAST:event_generateKeyMouseClicked

    private void subscribeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subscribeMouseClicked
        String message = this.message.getText();
        String d = this.privateKey.getText();
        String r = this.r.getText();
        if (!message.isEmpty() && !d.isEmpty() && !r.isEmpty()) {
            
            String md5 = MD5Custom.create(message);
            
            byte[] signature = Signature.create(
                md5.getBytes(),
                new BigInteger(d, this.radix),
                new BigInteger(r, this.radix)
            );
        
            String signatureString = Signature.toHexString(signature);
                    
            this.signature.setText(signatureString);

            this.displayMessage("The message has been sibscribed.");
        } else {
            this.displayMessage("Fields of message, private key, r can not be empty.");
        }
    }//GEN-LAST:event_subscribeMouseClicked

    private void checkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseClicked
        String message = this.message.getText();
        String signature = this.signature.getText();
        String e = this.publickKey.getText();
        String r = this.r.getText();
        if (!message.isEmpty() && !e.isEmpty() && !signature.isEmpty() && !r.isEmpty()) {
            
            try {
                String md5 = MD5Custom.create(message);
            
                byte[] checkSignature = Signature.create(
                    Signature.hexStringToByteArray(signature),
                    new BigInteger(e, this.radix),
                    new BigInteger(r, this.radix)
                );

                String signatureString = new String(checkSignature);

                if (md5.equals(signatureString)) {
                    this.displayMessage("The signature is correct.");
                } else {
                    this.displayMessage("The signature is not correct.");
                }
                
            } catch (Exception ex) {
                this.displayMessage("Error: " + ex.getMessage());
            }

        } else {
            this.displayMessage("Fields of message, public key, signature, r can not be empty.");
        }
    }//GEN-LAST:event_checkMouseClicked

    private void displayMessage(String message) {
        Message mWidow = new Message();
        mWidow.setMessage(message);
        mWidow.setVisible(true);
    }
    
    private int radix = 16;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JButton generateKey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea message;
    private javax.swing.JTextArea privateKey;
    private javax.swing.JTextArea publickKey;
    private javax.swing.JTextArea r;
    private javax.swing.JTextField signature;
    private javax.swing.JButton subscribe;
    // End of variables declaration//GEN-END:variables
}
